<!-- Объединенный файл -->
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>tasks 1-14</title>
</head>
<body>
    <?php
    // Форма для считывания данных с клавиатуры.
    function formForTasks() {
        print_r("<!-- Для считывания данных с клавиатуры -->");
        print_r("<form name=\"test\" action=\"\" method=\"post\">
             <p>Введите число: <input type=\"number\" name=\"numberN\" /></p>
             <p><input type=\"submit\" /></p>
        </form>");
    }


    /*1. Вывести на экран N случайных чисел (каждое с новой строки) из диапазона [-21, 35]
    *ПРИМЕЧАНИЕ: подразумевается, что вы должны организовать цикл, который выполнится N раз и при этом в каждом своём витке выведет на экран случайное число.
    */ 
    function task1Run() {
        formForTasks();

        // Для считывания данных с клавиатуры
        $n = $_POST["numberN"];

        // Диапазон
        $min = -21;
        $max = 35;

        // Вывести циклично случайные значения из диапазона
        for ($i = 1; $i <= $n; $i++) {
            print_r($i . ").\t=\t");
            print_r(rand( $min , $max ) . "<br>");
        }
    }


    // <!--2. Вывести на экран сумму N случайных чисел.-->
    function task2Run() {
        formForTasks();

        // Для считывания данных с клавиатуры
        $n = $_POST["numberN"];

        // Переменная для суммы
        $sum = 0;
        // Переменная для хранения случайного числа
        $temp = 0;

        // Диапазон
        $min = -21;
        $max = 35;

        // Вывести 
        print_r("Сумма чисел: ");
        for ($i = 1; $i <= $n; $i++) {
            $temp = rand( $min , $max );
            print_r("(" . $temp . ")" . " + ");
            $sum += $temp;
        }
        print_r("<br>Равна: " . $sum);
    }


    // <!--3. Вывести на экран N случайных чисел (каждое с новой строки). Для каждого числа, начиная со второго, рядом выводить - больше ли оно предыдущего или меньше.-->
    function task3Run() {
        formForTasks();
        // Для считывания данных с клавиатуры
        $n = $_POST["numberN"];

        // Переменная для суммы
        $sum = 0;
        // Переменная для хранения случайного числа
        $temp_prev = 0; // Предыдущее число
        $temp_cur = 0;  // Текущее число

        // Диапазон
        $min = -21;
        $max = 35;
        $bigger = " больше ";
        $less = " меньше ";
        $eqvl = " равно ";

        // Вывести 
        for ($i = 1; $i <= $n; $i++) {
            if ($i == 1) {
                $temp_cur = rand( $min , $max );
                print_r($temp_cur . "<br>");
            } else {
                $temp_prev = $temp_cur;
                $temp_cur = rand( $min , $max );
                if ($temp_cur > $temp_prev) {
                    print_r($temp_cur . $bigger . $temp_prev . "<br>");
                } elseif ($temp_cur < $temp_prev) {
                    print_r($temp_cur . $less . $temp_prev . "<br>");
                } else {
                    print_r($temp_cur . $eqvl . $temp_prev . "<br>");
                }
            }
        }
    }


    // <!--4. Вывести на экран n-ное число Фибоначчи. Пример последовательности:-->
    function task4Run() {
        formForTasks();
        // Для считывания данных с клавиатуры
        $n = $_POST["numberN"];

        // Переменная для хранения чисел
        $temp_prev = 0; // Предыдущее число
        $temp_cur = 1;  // Текущее число

        // Вывести 
        for ($i = 1; $i <= $n; $i++) {
            print_r($temp_prev . ", ");
            $temp = $temp_cur;
            $temp_cur += $temp_prev;
            $temp_prev = $temp;
        }
    }


    // <!--5. Дано некоторое число длиной от 1 до 5 цифр - вывести его цифры в обратном порядке.-->
    function task5Run() {
        // Диапазон
        $min = 0;
        $max = 99999;

        // Случайное число
        $rand_n = (rand( $min , $max ) . "<br>");
        // $rand_n = 5000;
        print_r("Число: " . $rand_n . "<br>Цифры в обратном порядке:<br>");
        // Вывести число в обратном порядке
        $ouputNumber = "";

        // Если число 0 выводим сразу, т.к. не войдет в цикл.
        if ($rand_n == 0) {
            print_r($rand_n);
        }

        // Записываем в строку по одному числу в обратном порядке.
        while( $rand_n > 0 ) {
            // Добавляем очередное число
            $ouputNumber .= strval(($rand_n % 10));
            //Каждый раз делим исходное число на 10, что-бы обойти каждый его разряд.
            $rand_n = intval($rand_n / 10);
        }

        print_r($ouputNumber);
    }


    // <!--6. Дано некоторое число длиной от 1 до 5 символов, вывести все его "нечётные" цифры в обратном порядке (аналогично предыдущей задаче), если же таких цифр не найдёт, вывести сообщение "Нечетных цифр не обнаружено!"-->
    function task6Run() {
        // Диапазон
        $min = 0;
        $max = 99999;

        // Случайное число
        $rand_n = (rand( $min , $max ) . "<br>");
        // $rand_n = 5000;
        print_r("Число: " . $rand_n . "<br>Нечетные цифры в обратном порядке:<br>");
        // Вывести число в обратном порядке
        $ouputNumber = "";
        // "Нечетных цифр не обнаружено!"
        $oddNumNo = "Нечетных цифр не обнаружено!";

        // Записываем в строку по одному числу в обратном порядке.
        while( $rand_n > 0 ) {
            // Добавляем очередное число
            if (($rand_n % 10) % 2 != 0) {
                $ouputNumber .= strval(($rand_n % 10));
            }
            //Каждый раз делим исходное число на 10, что-бы обойти каждый его разряд.
            $rand_n = intval($rand_n / 10);
        }

        // Проверяем если строка не изменилась, выводим сообщение "Нечетных цифр не обнаружено!"
        if ($ouputNumber == "") {
            print_r($oddNumNo);
        } else {  // Иначе выводим результат
           print_r($ouputNumber); 
        }
    }


    // <!--7. Задать массив из 7-ми элементов, заполнить его случайными значениями в одном цикле, а в другом цикле вывести эти значения на экран.-->
    function task7Run() {
        // Создаем массив
        $arr = array();
        // Забиваем случайными значениями
        for ($i=0; $i < 7; $i++) { 
            array_push($arr, rand());
        }

        // Выводим значения
        foreach ($arr as $key => $value) {
            print_r($value . " <br>");
        }
    }


    // <!--8. Задать двумерный массив размерностью m на n (MxN) элементов (m и n вынести в область определения констант), заполнить его случайными значениями и вывести их на экран уже после того, как весь массив будет заполнен (т.е. заполнять и выводить в разных группах циклов).-->
    function task8Run() {
        // Определяем костанты от 1 до 10
        define("N", rand(1, 10));
        define("M", rand(1, 10));
        // const N = rand(1, 10);
        // const M = rand(1, 10);

        // Выводим значения констант
        print_r("N = " . N . " <br>");
        print_r("M = " . M . " <br>");

        // Создаем массив
        $arr = array();
        // Забиваем случайными значениями
        for ($i=0; $i < N; $i++) {
            for ($j=0; $j < M; $j++) { 
                $arr[$i][$j] = rand();
            }
        }

        // Выводим значения
        foreach ($arr as $key => $value) {
            foreach ($value as $key => $value2) {
                print_r($value2 . "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
            }
            print_r("<br>");
        }
    }


    // <!--9.1. Задайте случайным образом массив из N элементов. Выведите его на экран "ёлочкой"

    // 9.2. Второй вариант - сделайте то же самое, но не используйте массив: у вас есть переменная N, выведете на экран, все числа до N, по тому же принципе что и выше
    function task9Run() {
        $n = rand(1, 100);
        $cnt = 0;
        $newLine = 1;

        // Создаем массив
        $arr = array();
        // Забиваем случайными значениями
        for ($i=0; $i < $n; $i++) {
            $arr[$i] = rand();
        }

        foreach ($arr as $key => $value) {
            print_r($value . "\t");
            $cnt++;

            // Когда счетчик достигает значения, перенос на новую строку
            if ($cnt == $newLine) {
                $cnt = 0;
                $newLine++;
                print_r("<br>");
            }
        }
        print_r("<br>");
        print_r("<br>");


        // Задание 9.2
        $cnt = 0;
        $newLine = 1;
        // Выводим значения Задание 9.2
        for ($i=1; $i <= $n; $i++) { 
            print_r($i . "\t");
            $cnt++;

            // Когда счетчик достигает значения, перенос на новую строку
            if ($cnt == $newLine) {
                $cnt = 0;
                $newLine++;
                print_r("<br>");
            }
        }
    }


    // <!--10. Задайте случайным образом массив из N элементов (целых чисел). Найдите максимальное число и напечатайте его.-->
    function task10Run() {
        $n = rand(1, 100);
        $max = PHP_INT_MIN;

        // Создаем массив
        $arr = array();
        // Забиваем случайными значениями
        for ($i=0; $i < $n; $i++) {
            $arr[$i] = rand();
        }

        // Находим максимальное значение
        for ($i=0; $i < $n; $i++) { 
            if ($arr[$i] > $max) {
                $max = $arr[$i];
            }
        }

        print_r($max);
    }


    // <!--11. Задайте случайным образом массив из 20-ти элементов (целых чисел). Найдите минимальное число и напечатайте его.-->
    function task11Run() {
        $n = 20;
        $min = PHP_INT_MAX;

        // Создаем массив
        $arr = array();
        // Забиваем случайными значениями
        for ($i=0; $i < $n; $i++) {
            $arr[$i] = rand();
        }

        // Находим минимальное значение
        for ($i=0; $i < $n; $i++) { 
            if ($arr[$i] < $min) {
                $min = $arr[$i];
            }
        }

        // foreach ($arr as $key => $value) {
        //     print_r($value . "<br>");
        // }

        // print_r("<br>");
        // print_r("<br>");
        // print_r("<br>");
        // print_r("<br>");

        print_r($min);
    }


    // <!--12. Даны два массива по 20 элементов каждый (заполните случайными числами, так чтобы среди элементов массива при очередном запуске программы могли встретиться и отрицательные и положительные числа).
    // Сравните каждый 3-ий элемент 1-ого массива с каждый 2-ым элементов 2-ого массива - сравнение проводите пока не закончится та выборка, которая короче.-->
    function task12Run() {
        $n = 20;
        $min = -1000;
        $max = 1000;

        // Создаем массив
        $arr1 = array();
        $arr2 = array();
        // Массив для 3 и 2 элементов
        $arr1Temp = array();
        $arr2Temp = array();

        // Забиваем случайными значениями
        for ($i=0; $i < $n; $i++) {
            $arr1[$i] = rand($min, $max);
            $arr2[$i] = rand($min, $max);
            // Забиваем каждый третий элемент
            if ((($i + 1) % 3) == 0) {
                array_push($arr1Temp, $arr1[$i]);
            }
            // Забиваем каждый второй элемент
            if ((($i + 1) % 2) == 0) {
                array_push($arr2Temp, $arr2[$i]);
            }
        }
        
        // var_dump($arr1); print_r("<br>");
        // var_dump($arr2); print_r("<br>");
        // var_dump($arr1Temp); print_r("<br>");
        // var_dump($arr2Temp); print_r("<br>");
        //  print_r("<br>");
        //   print_r("<br>");

        // Сравниваем каждый 3 элемент первого массива с каждым 2 элементом второго массива
        for ($i=0; $i < count($arr1Temp); $i++) { 
            if ($arr1Temp[$i] > $arr2Temp[$i]) {
                print_r($arr1Temp[$i] . " больше " . $arr2Temp[$i]);
            } elseif ($arr1Temp[$i] < $arr2Temp[$i]) {
                print_r($arr1Temp[$i] . " меньше " . $arr2Temp[$i]);
            } else {
                print_r($arr1Temp[$i] . " равен " . $arr2Temp[$i]);
            }
            print_r("<br>");
        }
    }


    //     <!--13. Создайте функцию, которая принимает на вход массив случайных чисел из диапазона [5..12]. Обходит этот массив и делает для каждого элемента следующее (пусть она оказывает побочный эффект прямо в своём теле):
    // Если это число равно 5 -- то выведете на экран строку "пять", если 6 -- то строку "шесть", если 7 то число "7", иначе -- строку "какое-то другое число".
    // Используйте для решения задачи оператор switch-->
    function task13Run() {
        function callMeKakOnaEstt($arr) {
            foreach ($arr as $value) {
                switch ($value) {
                    case 5:
                        print_r("пять<br>");
                        break;

                    case 6:
                        print_r("шесть<br>");
                        break;

                    case 7:
                        print_r("7<br>");
                        break;
                    
                    default:
                        print_r("какое-то другое число<br>");
                        break;
                }
            }
        }

        $n = 20; // Размер массива
        // Создание массива
        $arr1 = array(); 
        for ($i=0; $i < $n; $i++) { 
            $arr1[$i] = rand(5, 12);
        }

        // var_dump($arr1);
        callMeKakOnaEstt($arr1);
    }


    //     <!--14. Есть два массива "a" и "b". На вход вашей программе подаётся массив "a" случайных чисел (10 элементов) из диапазона от 1 до 20. Задача: вывести на экран все числа, которые не содержатся в массиве "b"
    function task14_1Run() {
        // Функция возвращающая разность массива A и массива B
        function Complement($arr) {
            $arrTemp = array();
            $b = [12, 5, 17, 6, 4];
            $cnt = 0;

            // Проверка если, элемент с массива А отсутсвует в массиве B, то добавить в третий массив
            for ($i=0; $i < count($arr); $i++) {
                // Проверяю первый элемент массива А встречается ли в массиве B
                for ($j=0; $j < count($b); $j++) { 
                    if ($arr[$i] != $b[$j]) {
                        $cnt++;
                    }
                }
                if ($cnt == count($b)) {
                    array_push($arrTemp, $arr[$i]);
                }
                $cnt = 0;
            }

            return $arrTemp;
        }

        // Массив
        $a = array();
        $b = [12, 5, 17, 6, 4];

        // Диапазон
        $min = 1;
        $max = 20;
        // Длина массива
        $a_len = 10;

        // Забить массив А
        for ($i=0; $i < $a_len; $i++) { 
            array_push($a, rand($min, $max));
        }

        // Вызвать функцию
        $arrComp = Complement($a);

        // Вывести элементы
        foreach ($arrComp as $value) {
            print_r($value . " ");
        }
    }


    // С использованием in_array()(link is external) (что проще)
    function task14_2Run() {
        // Функция возвращающая разность массива A и массива B
        function Complement($arr) {
            $arrTemp = array();
            $b = [12, 5, 17, 6, 4];

            // Проверка если, элемент с массива А отсутсвует в массиве B, то добавить в третий массив С ИСПОЛЬЗОВАНИЕМ in_array
            for ($i=0; $i < count($arr); $i++) {
                if ((in_array($arr[$i], $b)) == false) {
                    array_push($arrTemp, $arr[$i]);
                }
            }

            return $arrTemp;
        }

        // Массив
        $a = array();
        $b = [12, 5, 17, 6, 4];

        // Диапазон
        $min = 1;
        $max = 20;
        // Длина массива
        $a_len = 10;

        // Забить массив А
        for ($i=0; $i < $a_len; $i++) { 
            array_push($a, rand($min, $max));
        }

        // Вызвать функцию
        $arrComp = Complement($a);

        // Вывести элементы
        foreach ($arrComp as $value) {
            print_r($value . " ");
        }
    }

    // Запускать по одной функции для проверки задач.
    task1Run();
    ?> <!-- end php -->

</body>
</html>